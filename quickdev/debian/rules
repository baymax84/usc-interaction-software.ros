#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# special rules file for pbuilder and ROS
#
# if building a stack which contains both:
# - package1, which
#   - compiles a shared library and a binary linked against that shared library, or:
#   - compiles a shared library, and:
# - package2, which compiles a binary linked against the shared library from package1
#
# installation at a later time to /opt/ros/.../stacks/... will cause binaries to fail with "cannot load shared library" because pbuilder builds
# all packages in /tmp/buildd/some-package-<version>
#
# solution:
#
# allow pbuilder to do its normal thing, but
# - make a copy of everything in /tmp/buildd/some-package-<version> in /tmp/buildd/<ros-stack-name>
# - make a simlink to /tmp/buildd/<ros-stack-name> in /opt/ros/.../stacks/ called <ros-stack-name>
# - override build stage, cd to location of stack in ROS_PACKAGE_PATH to ensure binaries are linked with correct path, run build stage
# - override binary stage, cd to ~/<ros-stack-name>, run binary stage
# - override sh_builddeb stage, wipe out everything in the original build dir (/tmp/buildd/some-package-<version>), copy everything in
# - ~/<ros-stack-name> to the original build dir, run dh_builddeb stage

ROS_PACKAGE_NAME=quickdev

build:
	export DEB_PACKAGE_NAME=$${PWD##*/} && cd .. && mkdir $(ROS_PACKAGE_NAME) && cp $$DEB_PACKAGE_NAME/* $(ROS_PACKAGE_NAME) -r && \
	cd $(ROS_PACKAGE_NAME) && ln -s $$(pwd) /opt/ros/groovy/stacks/$(ROS_PACKAGE_NAME) && ls && ls /opt/ros/groovy/stacks/$(ROS_PACKAGE_NAME)
	. /opt/ros/groovy/setup.sh && export ROS_PARALLEL_JOBS=-j$$(cat /proc/cpuinfo | grep -c processor) && cd $$(rosstack find $(ROS_PACKAGE_NAME)) && dh $@

binary:
	. /opt/ros/groovy/setup.sh && export ROS_PARALLEL_JOBS=-j$$(cat /proc/cpuinfo | grep -c processor) && cd ~/$(ROS_PACKAGE_NAME) && dh $@

override_dh_shlibdeps:
	dh_shlibdeps -- --ignore-missing-info

override_dh_builddeb:
	cd .. && export DEB_PACKAGE_NAME=$(shell cd .. && find -maxdepth 1 -mindepth 1 -type d -not -name "$(ROS_PACKAGE_NAME)" -not -name "\.*" -exec basename {} \;) && rm $$DEB_PACKAGE_NAME/* -r && cp $(ROS_PACKAGE_NAME)/* $$DEB_PACKAGE_NAME -r
	dh_builddeb $@

%:
	dh $@
