#! /usr/bin/env python
PACKAGE = 'kinect_config'
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("tilt_angle", double_t, 0, "Set the tilt angle; must be within [-31:31] degrees.", 0.0, -31.0, 31.0)
gen.add("maintain_tilt_angle", bool_t, 0, "Maintain the tilt angle.", False)
led_option_enum = gen.enum([ gen.const("Off", int_t, 0, "LED off."),
	gen.const("Green", int_t, 1, "LED green."),
	gen.const("Red", int_t, 2, "LED red"),
	gen.const("Orange", int_t, 3, "LED orange."),
	gen.const("GreenBlinking1", int_t, 4, "LED blinking green on and off."),
	gen.const("GreenBlinking2", int_t, 5, "LED blinking green on and off."),
	gen.const("RedOrange1", int_t, 6, "LED blinking red and orange."),
	gen.const("RedOrange2", int_t, 7, "LED blinking red and orange.") ],
	"An enumerated list to set the LED option.")
gen.add("led_option", int_t, 0, "Set the LED option; must be within [0:7].", 1, 0, 7, edit_method=led_option_enum)
gen.add("loop_rate", double_t, 0, "Set the tilt angle; must be within [-31:31] degrees.", 10.0, 0.0, 100.0)
gen.add("show_imu", bool_t, 0, "Display the IMU data to the console.", False)
gen.add("show_cur_tilt_angle", bool_t, 0, "Display the current tilt angle to the console.", False)
gen.add("show_cur_tilt_status", bool_t, 0, "Display the current tilt status to the console.", False)

exit(gen.generate(PACKAGE, "kinect_config", "KinectAux"))
